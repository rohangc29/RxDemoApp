///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RxDemoApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording3 recording.
    /// </summary>
    [TestModule("52beb922-23a7-4b6c-b6c8-6b9b5452b015", ModuleType.Recording, 1)]
    public partial class Recording3 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the RxDemoAppRepository repository.
        /// </summary>
        public static RxDemoAppRepository repo = RxDemoAppRepository.Instance;

        static Recording3 instance = new Recording3();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording3()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording3 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.ImageBasedAutomation' at 82;8.", repo.RxMainFrame.ImageBasedAutomationInfo, new RecordItemIndex(0));
            repo.RxMainFrame.ImageBasedAutomation.Click("82;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 141;15.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(1));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("141;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 128;20.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(2));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("128;20");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 15;17.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(3));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("15;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 15;17.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(4));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("15;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 97;53.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(5));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("97;53");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 44;120.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(6));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("44;120");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.MonthCalendar1' at 167;116.", repo.RxMainFrame.RxTabImageBased.MonthCalendar1Info, new RecordItemIndex(7));
            repo.RxMainFrame.RxTabImageBased.MonthCalendar1.Click("167;116");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.RxTabImageBased.ChkShowImage' at 37;6.", repo.RxMainFrame.RxTabImageBased.ChkShowImageInfo, new RecordItemIndex(8));
            repo.RxMainFrame.RxTabImageBased.ChkShowImage.Click("37;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ControlName='TheCat') on item 'RxMainFrame.RxTabImageBased.TheCat'.", repo.RxMainFrame.RxTabImageBased.TheCatInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.RxMainFrame.RxTabImageBased.TheCatInfo, "ControlName", "TheCat");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
